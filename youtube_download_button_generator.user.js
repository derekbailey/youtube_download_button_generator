// Generated by CoffeeScript 1.3.3

/*
// ==UserScript==
// @name        Youtube Download Button Generator
// @description Youtube Download Button Generator
// @namespace   http://github.com/derekbailey
// @include     http://www.youtube.com/watch*
// @version     0.2
// ==/UserScript==
*/


(function() {
  var createSelectButton, getTitle, getVideoUrls, main, sortByItag;

  getTitle = function() {
    return document.querySelector('h1').textContent.replace(/^\s*|\s*$/g, '');
  };

  getVideoUrls = function() {
    var data, reg;
    reg = new RegExp('(\\s+)?yt\.playerConfig\\s=\\s(.*?)\n');
    data = document.querySelector('html').textContent.match(reg)[2].replace(/;$/, '');
    return JSON.parse(data).args.url_encoded_fmt_stream_map.split(',').map(function(param) {
      var video;
      video = {};
      param.split("&").map(function(val) {
        var key;
        data = val.split("=");
        key = data[0];
        val = data[1];
        switch (key) {
          case "itag":
            return video.itag = parseInt(val);
          case "url":
            return video.url = unescape(val);
          case "sig":
            return video.sig = val;
          case "type":
            return video.type = unescape(val).split("video/")[1].split(";")[0].replace("x-", "");
          case "quality":
            return video.quality = val;
        }
      });
      return video;
    });
  };

  sortByItag = function(videos) {
    var i, itagOrder, itags, val, _i, _len;
    itags = '38 46 37 84 22 45 10 85 35 44 18 34 10 10 82 43 6 36 83 5 17 13'.split(/\s/);
    itagOrder = {};
    for (i = _i = 0, _len = itags.length; _i < _len; i = ++_i) {
      val = itags[i];
      itagOrder[val] = i;
    }
    return videos.sort(function(a, b) {
      if (itagOrder[a.itag] === void 0) {
        a.itag = itags.length;
      }
      if (itagOrder[b.itag] === void 0) {
        b.itag = itags.length;
      }
      return itagOrder[a.itag] - itagOrder[b.itag];
    });
  };

  /*
  console.log(getVideoUrls());
  */


  createSelectButton = function(vals) {
    var elm, option, select, val, _i, _len;
    select = document.createElement('select');
    select.className = 'yt-uix-button';
    select.onchange = function() {
      this.options[this.selectedIndex].textContent = "Download...";
      return location.href = this.value;
    };
    option = document.createElement('option');
    option.value = vals[0].link;
    option.textContent = 'Download';
    select.appendChild(option);
    for (_i = 0, _len = vals.length; _i < _len; _i++) {
      val = vals[_i];
      option = document.createElement('option');
      option.value = val.link;
      option.textContent = val.text;
      select.appendChild(option);
    }
    elm = document.querySelector('#watch7-secondary-actions');
    return elm.appendChild(select);
  };

  main = function() {
    var vals;
    vals = sortByItag(getVideoUrls()).map(function(val) {
      return {
        text: val.type + '(' + val.quality + ')',
        link: val.url + "&signature=" + val.sig + '&title=' + encodeURIComponent(getTitle())
      };
    });
    return createSelectButton(vals);
  };

  main();

}).call(this);
